{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"@actions/core\"","webpack:///(webpack)/buildin/module.js","webpack:///external \"source-map-support/register\"","webpack:///external \"fs\"","webpack:///./src/fsUtils.ts","webpack:///./src/index.ts","webpack:///./src/config.ts","webpack:///external \"openpgp\"","webpack:///external \"ajv\"","webpack:///external \"js-yaml\"","webpack:///external \"lodash/groupBy\"","webpack:///external \"lodash/sortBy\"","webpack:///./src/errors.ts","webpack:///external \"path\"","webpack:///./src/inputs.ts","webpack:///./src/prepare.ts","webpack:///external \"lodash/isString\"","webpack:///./src/strUtils.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","webpackPolyfill","deprecate","paths","children","pathResolve","baseDir","path","resolve","async","makeDir","mkdir","stat","promises","targetPath","isDirectory","Error","e","code","recursive","content","writeFile","absolutePath","relativeDir","dirname","run","inputs","loadInputs","config","loadConfig","startGroup","prepareMask","endGroup","prepareEnv","prepareFile","setFailed","process","cwd","ERROR_KEYWORD_ORDER","reverse","assertConfig","v","validate","compile","errors","groupedDataPathErrors","dataPaths","keys","dataPath","dataPathErrors","sortedErrors","indexOf","keyword","ConfigActionError","message","loadConfigFile","readFile","loadConfigYaml","loadConfigWithGPGPassphrase","gpgPassphrase","data","raw","openpgp","decrypt","read","passwords","format","safeLoad","configFile","ActionError","super","setPrototypeOf","this","result","getInput","required","getOptionalInput","mask","setSecret","replaceEnvVer","info","length","env","k","exportVariable","secret","file","filename","actualFilename","error","PATTERN_ENV_VER","replace","_"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","module.exports = require(\"@actions/core\");","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","module.exports = require(\"source-map-support/register\");","module.exports = require(\"fs\");","import { promises } from \"fs\";\nimport { dirname, resolve } from \"path\";\n\nexport function pathResolve(baseDir: string, path: string) {\n  return resolve(baseDir, path);\n}\n\nexport async function makeDir(baseDir: string, path: string): Promise<boolean> {\n  const { mkdir, stat } = promises;\n\n  if (path == \".\") {\n    return true;\n  }\n\n  const targetPath = pathResolve(baseDir, path);\n  try {\n    const result = await stat(targetPath);\n    if (!result.isDirectory()) {\n      throw new Error(`not a directory: ${path}`);\n    }\n  } catch (e) {\n    if (e.code != \"ENOENT\") {\n      throw e;\n    }\n    await mkdir(targetPath, { recursive: true });\n  }\n  return true;\n}\n\nexport async function writeFile(\n  baseDir: string,\n  path: string,\n  content: string\n): Promise<boolean> {\n  const { writeFile } = promises;\n  const absolutePath = pathResolve(baseDir, path);\n  const relativeDir = dirname(path);\n  await makeDir(baseDir, relativeDir);\n  await writeFile(absolutePath, content);\n  return true;\n}\n","import \"source-map-support/register\";\nimport { endGroup, startGroup, setFailed } from \"@actions/core\";\n\nimport { ConfigActionError } from \"./errors\";\nimport { loadConfig } from \"./config\";\nimport { loadInputs } from \"./inputs\";\nimport { prepareEnv, prepareFile, prepareMask } from \"./prepare\";\n\nexport async function run(baseDir: string): Promise<void> {\n  try {\n    const inputs = await loadInputs();\n    const config = await loadConfig(baseDir, inputs);\n\n    startGroup(\"Setting mask values\");\n    await prepareMask(config);\n    endGroup();\n    startGroup(\"Exporting environment variables\");\n    await prepareEnv(config);\n    endGroup();\n    startGroup(\"Saving defined files\");\n    await prepareFile(baseDir, config);\n    endGroup();\n  } catch (e) {\n    setFailed(e);\n  }\n}\n\n/* istanbul ignore next */\nif (require.main === module) {\n  const baseDir = process.cwd();\n  run(baseDir);\n}\n","import * as openpgp from \"openpgp\";\nimport Ajv from \"ajv\";\nimport yaml from \"js-yaml\";\nimport { promises } from \"fs\";\nimport groupBy from \"lodash/groupBy\";\nimport sortBy from \"lodash/sortBy\";\n\nimport configSchema from \"./config.schema.json\";\nimport { ConfigActionError } from \"./errors\";\nimport { Inputs } from \"./inputs\";\nimport { pathResolve } from \"./fsUtils\";\n\nexport type Config = {\n  mask?: string[];\n  env?: {\n    [k: string]:\n      | string\n      | {\n          value: string;\n          secret?: boolean;\n        };\n  };\n  file?: {\n    [k: string]: string;\n  };\n};\n\nconst ERROR_KEYWORD_ORDER = [\"required\", \"type\"].reverse();\n\nexport function assertConfig(v: unknown): asserts v is Config {\n  const ajv = new Ajv();\n  const validate = ajv.compile(configSchema);\n  validate(v);\n  if (validate.errors) {\n    // sort by dataPath and keyword\n    const errors = validate.errors;\n    const groupedDataPathErrors = groupBy(errors, \"dataPath\");\n    const dataPaths = sortBy(Object.keys(groupedDataPathErrors), \"length\");\n    for (const dataPath of dataPaths) {\n      const dataPathErrors = groupedDataPathErrors[dataPath];\n      const sortedErrors = sortBy(\n        dataPathErrors,\n        (v) => -ERROR_KEYWORD_ORDER.indexOf(v.keyword)\n      );\n      for (const e of sortedErrors) {\n        throw new ConfigActionError(`${e.message} at ${e.dataPath}`);\n      }\n    }\n  }\n}\n\nexport async function loadConfig(\n  baseDir: string,\n  inputs: Inputs\n): Promise<Config> {\n  if (inputs.gpgPassphrase) {\n    return loadConfigWithGPGPassphrase(\n      baseDir,\n      inputs.configFile,\n      inputs.gpgPassphrase\n    );\n  } else {\n    return loadConfigFile(baseDir, inputs.configFile);\n  }\n}\n\nexport async function loadConfigFile(\n  baseDir: string,\n  path: string\n): Promise<Config> {\n  const { readFile } = promises;\n  const absolutePath = pathResolve(baseDir, path);\n  const raw = await readFile(absolutePath, \"utf8\");\n  return loadConfigYaml(raw);\n}\n\nexport async function loadConfigWithGPGPassphrase(\n  baseDir: string,\n  path: string,\n  gpgPassphrase: string\n): Promise<Config> {\n  const { readFile } = promises;\n  const absolutePath = pathResolve(baseDir, path);\n  const content = await readFile(absolutePath);\n  const { data: raw } = await openpgp.decrypt({\n    message: await openpgp.message.read(content),\n    passwords: [gpgPassphrase],\n    format: \"utf8\",\n  });\n  return loadConfigYaml(raw);\n}\n\nexport async function loadConfigYaml(raw: string): Promise<Config> {\n  const config = yaml.safeLoad(raw);\n  assertConfig(config);\n  return config;\n}\n","module.exports = require(\"openpgp\");","module.exports = require(\"ajv\");","module.exports = require(\"js-yaml\");","module.exports = require(\"lodash/groupBy\");","module.exports = require(\"lodash/sortBy\");","export class ActionError extends Error {\n  constructor(message?: string) {\n    super(message); // 'Error' breaks prototype chain here\n    Object.setPrototypeOf(this, new.target.prototype); // restore prototype chain\n  }\n}\n\nexport class ConfigActionError extends ActionError {\n  constructor(message?: string) {\n    super(message);\n    Object.setPrototypeOf(this, new.target.prototype);\n  }\n}\n","module.exports = require(\"path\");","import { getInput } from \"@actions/core\";\n\nexport type Inputs = {\n  configFile: string;\n  gpgPassphrase?: string;\n};\n\nfunction getRequiredInput(name: string): string {\n  return getInput(name, { required: true });\n}\n\nfunction getOptionalInput(name: string): string | void {\n  const value = getInput(name);\n  if (value == \"\") {\n    return;\n  }\n  return value;\n}\n\nexport async function loadInputs(): Promise<Inputs> {\n  const configFile = getRequiredInput(\"config_file\");\n  let result: Inputs = {\n    configFile,\n  };\n\n  const gpgPassphrase = getOptionalInput(\"gpg_passphrase\");\n  if (gpgPassphrase) {\n    result = { ...result, gpgPassphrase };\n  }\n\n  return result;\n}\n","import { error, exportVariable, info, setSecret } from \"@actions/core\";\nimport isString from \"lodash/isString\";\nimport { replaceEnvVer } from \"./strUtils\";\n\nimport { Config } from \"./config\";\nimport { writeFile } from \"./fsUtils\";\n\nexport async function prepareMask(config: Config): Promise<void> {\n  if (!config.mask) {\n    return;\n  }\n  for (const v of config.mask) {\n    setSecret(replaceEnvVer(v));\n  }\n  info(`mask value count: ${config.mask.length}`);\n}\n\nexport async function prepareEnv(config: Config): Promise<void> {\n  if (!config.env) {\n    return;\n  }\n  for (const k in config.env) {\n    const env = config.env[k];\n    if (isString(env)) {\n      const value = replaceEnvVer(env);\n      setSecret(value);\n      exportVariable(k, value);\n      info(`${k}: *** (mask)`);\n    } else {\n      const value = replaceEnvVer(env.value);\n      exportVariable(k, value);\n      if (env.secret === false) {\n        info(`${k}: ${value}`);\n      } else {\n        setSecret(value);\n        info(`${k}: *** (mask)`);\n      }\n    }\n  }\n}\n\nexport async function prepareFile(\n  baseDir: string,\n  config: Config\n): Promise<void> {\n  if (!config.file) {\n    return;\n  }\n  for (const filename in config.file) {\n    const content = config.file[filename];\n    const actualFilename = replaceEnvVer(filename);\n    const result = await writeFile(baseDir, actualFilename, content);\n    if (result) {\n      info(`wrote \"${filename}\"`);\n    } else {\n      error(`could not write \"${filename}\"`);\n    }\n  }\n}\n","module.exports = require(\"lodash/isString\");","const PATTERN_ENV_VER = /\\$\\{\\s*([a-zA-Z_]+[a-zA-Z0-9_]*)\\s*\\}/g;\n\nexport function replaceEnvVer(v: string) {\n  return v.replace(PATTERN_ENV_VER, (_, key) => process.env[key] || \"\");\n}\n"],"sourceRoot":""}